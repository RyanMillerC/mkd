#!/bin/bash
#
# Render Markdown into HTML on save
#
# USAGE: mkd FILENAME
#

set -e

FILENAME="$1"

# Validate FILENAME is a file
if [[ ! -f "$FILENAME" ]] ; then
  echo "ERROR: $FILENAME is not a file" >&2
  echo # Newline
  echo 'USAGE: mkd FILENAME' >&2
  exit 1
fi

# Function will be run multiple times
markdown_render() {
  echo "Rendering $FILENAME..."

  # Remove mkd directory contents, if directory exists
  [[ -d /tmp/mkd ]] && rm -rf /tmp/mkd/*

  # Create mkd directory, if it doesn't exist
  [[ -d /tmp/mkd ]] || mkdir /tmp/mkd

  # Generate Markdown file into HTML
  generate-md \
	  --layout github \
	  --input "$FILENAME" \
	  --output /tmp/mkd

  # Rename HTML file so the next command will work
  mv /tmp/mkd/*.html /tmp/mkd/index.html

  echo "Done rendering $FILENAME!"
}

# Render once first time
markdown_render

# Run web server that reloads on change in the background
# (Weird things happened on port 5000... 7000 seems ok.)
livereload --port 7000 /tmp/mkd &
PID_LIVERELOAD=$!

# Open page in browser
open http://localhost:7000

# Re-render on change in the background
# (Kinda hacky but it's more hacky to make xargs work with a bash function)
fswatch --one-per-batch "$FILENAME" | while read ; do
  markdown_render
done &
PID_FSWATCH=$!

# Function to stop background processes
cleanup() {
  echo 'CTRL-C received, stopping background processes...'
  kill $PID_FSWATCH $PID_LIVERELOAD
  wait $PID_FSWATCH $PID_LIVERELOAD
  exit
}

# Call cleanup when CTRL-C is pressed
trap cleanup SIGINT

# Keep script running until CTRL-C is pressed
wait
